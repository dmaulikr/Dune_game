#ifndef _Variables_H_
#define _Variables_H_

///////////////////////////////////////////////////////////////////////////////
///////////////////////////Pixel Color Includes////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////
uint16_t palette[16];  // Should probably be 256, but I don't use many colors...
uint16_t pixel_data[2500];

//Extra integers for color palette
int a = 0xa; int b = 0xb; int c = 0xc; 
int d = 0xd; int e = 0xe; int f = 0xf;

/*struct Player
{
  int x, y, healthCurrent, healthTotal, gold, experience, experienceForNextLevel;
  byte currentMap, direction, level, attack, attackAddition, defense, defenseAddition, speed, speedAddition, weapon, armor, other;
  unsigned char name[6];
  byte items[ITEMAMOUNT];
  bool tags[1];
};

Player player;

void resetPlayer()
{
  player =
  {
    x, y, // position
    20, 20, // health
    100, // gold
    0, 50, // experience
    int room, // currentMap
    int player_direction, // direction
    1, // level
    5, 0, // attack
    5, 0, // defence
    5, 0, // speed
    NONE, NONE, NONE, // equipped items
    {NONE, NONE, NONE, NONE, NONE, NONE}, // name
    {1, 0, 0, 0, 0, 0}, // items
    {true}
  };
}

struct Enemy
{
    int id, health, attack, defense, speed, exp, gold;
};

const Enemy cavespider[] =
{
 0, 7, 5, 0, 1, 5, 2 ///
};
*/
const byte cursordot[] = {
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x01,0x11,0x11,0x11,0x10,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,};



#endif
